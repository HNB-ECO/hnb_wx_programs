<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honey.mapper.ChargeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.honey.entity.ChargeRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_name" property="orderName" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="platform_id" property="platformId" jdbcType="BIGINT" />
    <result column="coin" property="coin" jdbcType="DECIMAL" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="id_delete" property="idDelete" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_name, order_id, user_id, platform_id, coin, order_type, create_time, update_time, 
    id_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honey.entity.ChargeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from charge_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from charge_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from charge_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honey.entity.ChargeRecord" >
    insert into charge_record (id, order_name, order_id, 
      user_id, platform_id, coin, 
      order_type, create_time, update_time, 
      id_delete)
    values (#{id,jdbcType=BIGINT}, #{orderName,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{platformId,jdbcType=BIGINT}, #{coin,jdbcType=DECIMAL}, 
      #{orderType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{idDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honey.entity.ChargeRecord" >
    insert into charge_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderName != null" >
        order_name,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="coin != null" >
        coin,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="idDelete != null" >
        id_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderName != null" >
        #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=BIGINT},
      </if>
      <if test="coin != null" >
        #{coin,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idDelete != null" >
        #{idDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honey.entity.ChargeRecordExample" resultType="java.lang.Integer" >
    select count(*) from charge_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.honey.entity.ChargeRecord" >
    update charge_record
    <set >
      <if test="orderName != null" >
        order_name = #{orderName,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=BIGINT},
      </if>
      <if test="coin != null" >
        coin = #{coin,jdbcType=DECIMAL},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="idDelete != null" >
        id_delete = #{idDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honey.entity.ChargeRecord" >
    update charge_record
    set order_name = #{orderName,jdbcType=VARCHAR},
      order_id = #{orderId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      platform_id = #{platformId,jdbcType=BIGINT},
      coin = #{coin,jdbcType=DECIMAL},
      order_type = #{orderType,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      id_delete = #{idDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="insertIdBack" parameterType="com.honey.entity.ChargeRecord" useGeneratedKeys="true" keyProperty="id">
    insert into charge_record (id, order_name, order_id,
      user_id, platform_id, coin,
      order_type, create_time, update_time,
      id_delete)
    values (#{id,jdbcType=BIGINT}, #{orderName,jdbcType=VARCHAR}, #{orderId,jdbcType=BIGINT},
      #{userId,jdbcType=BIGINT}, #{platformId,jdbcType=BIGINT}, #{coin,jdbcType=DECIMAL},
      #{orderType,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP},
      #{idDelete,jdbcType=INTEGER})
  </insert>
</mapper>