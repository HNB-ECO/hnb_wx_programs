<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honey.mapper.WithdrawChargeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.honey.entity.WithdrawChargeRecord" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="platform_id" property="platformId" jdbcType="BIGINT" />
    <result column="withdraw_amount" property="withdrawAmount" jdbcType="DECIMAL" />
    <result column="is_complete" property="isComplete" jdbcType="INTEGER" />
    <result column="withdraw_result" property="withdrawResult" jdbcType="INTEGER" />
    <result column="operate_name" property="operateName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="withdraw_time" property="withdrawTime" jdbcType="TIMESTAMP" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <association property="user" column="user_id" select="com.honey.mapper.UserMapper.selectByPrimaryKey"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, platform_id, withdraw_amount, is_complete, withdraw_result, operate_name, 
    create_time, update_time, withdraw_time, is_delete
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honey.entity.WithdrawChargeRecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from withdraw_charge_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from withdraw_charge_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from withdraw_charge_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honey.entity.WithdrawChargeRecord" >
    insert into withdraw_charge_record (id, user_id, platform_id, 
      withdraw_amount, is_complete, withdraw_result, 
      operate_name, create_time, update_time, 
      withdraw_time, is_delete)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{platformId,jdbcType=BIGINT}, 
      #{withdrawAmount,jdbcType=DECIMAL}, #{isComplete,jdbcType=INTEGER}, #{withdrawResult,jdbcType=INTEGER},
      #{operateName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{withdrawTime,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.honey.entity.WithdrawChargeRecord" >
    insert into withdraw_charge_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="platformId != null" >
        platform_id,
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount,
      </if>
      <if test="isComplete != null" >
        is_complete,
      </if>
      <if test="withdrawResult != null" >
        withdraw_result,
      </if>
      <if test="operateName != null" >
        operate_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="withdrawTime != null" >
        withdraw_time,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        #{platformId,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null" >
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="isComplete != null" >
        #{isComplete,jdbcType=INTEGER},
      </if>
      <if test="withdrawResult != null" >
        #{withdrawResult,jdbcType=INTEGER},
      </if>
      <if test="operateName != null" >
        #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTime != null" >
        #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honey.entity.WithdrawChargeRecordExample" resultType="java.lang.Integer" >
    select count(*) from withdraw_charge_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.honey.entity.WithdrawChargeRecord" >
    update withdraw_charge_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="platformId != null" >
        platform_id = #{platformId,jdbcType=BIGINT},
      </if>
      <if test="withdrawAmount != null" >
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="isComplete != null" >
        is_complete = #{isComplete,jdbcType=INTEGER},
      </if>
      <if test="withdrawResult != null" >
        withdraw_result = #{withdrawResult,jdbcType=INTEGER},
      </if>
      <if test="operateName != null" >
        operate_name = #{operateName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="withdrawTime != null" >
        withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honey.entity.WithdrawChargeRecord" >
    update withdraw_charge_record
    set user_id = #{userId,jdbcType=BIGINT},
      platform_id = #{platformId,jdbcType=BIGINT},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      is_complete = #{isComplete,jdbcType=INTEGER},
      withdraw_result = #{withdrawResult,jdbcType=INTEGER},
      operate_name = #{operateName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>