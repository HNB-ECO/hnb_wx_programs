<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.honey.mapper.GoodsCommentMapper" >
  <resultMap id="BaseResultMap" type="com.honey.entity.GoodsComment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="goods_id" property="goodsId" jdbcType="BIGINT" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="good_evaluate" property="goodEvaluate" jdbcType="BIGINT" />
    <result column="normal_evaluate" property="normalEvaluate" jdbcType="BIGINT" />
    <result column="bad_evaluate" property="badEvaluate" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="is_anonymous" property="isAnonymous" jdbcType="INTEGER" />
    <result column="image_url" property="imageUrl" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, goods_id, score, good_evaluate, normal_evaluate, bad_evaluate, content, 
    is_anonymous, image_url, is_delete, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.honey.entity.GoodsCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from goods_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from goods_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goods_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.honey.entity.GoodsComment" >
    insert into goods_comment (id, user_id, goods_id, 
      score, good_evaluate, normal_evaluate, 
      bad_evaluate, content, is_anonymous, 
      image_url, is_delete, create_time, 
      update_time)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{goodsId,jdbcType=BIGINT}, 
      #{score,jdbcType=INTEGER}, #{goodEvaluate,jdbcType=BIGINT}, #{normalEvaluate,jdbcType=BIGINT}, 
      #{badEvaluate,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, #{isAnonymous,jdbcType=INTEGER}, 
      #{imageUrl,jdbcType=VARCHAR}, #{isDelete,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.honey.entity.GoodsComment" >
    insert into goods_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="goodsId != null" >
        goods_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="goodEvaluate != null" >
        good_evaluate,
      </if>
      <if test="normalEvaluate != null" >
        normal_evaluate,
      </if>
      <if test="badEvaluate != null" >
        bad_evaluate,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="isAnonymous != null" >
        is_anonymous,
      </if>
      <if test="imageUrl != null" >
        image_url,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="goodEvaluate != null" >
        #{goodEvaluate,jdbcType=BIGINT},
      </if>
      <if test="normalEvaluate != null" >
        #{normalEvaluate,jdbcType=BIGINT},
      </if>
      <if test="badEvaluate != null" >
        #{badEvaluate,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymous != null" >
        #{isAnonymous,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null" >
        #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.honey.entity.GoodsCommentExample" resultType="java.lang.Integer" >
    select count(*) from goods_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.honey.entity.GoodsComment" >
    update goods_comment
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="goodsId != null" >
        goods_id = #{goodsId,jdbcType=BIGINT},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="goodEvaluate != null" >
        good_evaluate = #{goodEvaluate,jdbcType=BIGINT},
      </if>
      <if test="normalEvaluate != null" >
        normal_evaluate = #{normalEvaluate,jdbcType=BIGINT},
      </if>
      <if test="badEvaluate != null" >
        bad_evaluate = #{badEvaluate,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isAnonymous != null" >
        is_anonymous = #{isAnonymous,jdbcType=INTEGER},
      </if>
      <if test="imageUrl != null" >
        image_url = #{imageUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.honey.entity.GoodsComment" >
    update goods_comment
    set user_id = #{userId,jdbcType=BIGINT},
      goods_id = #{goodsId,jdbcType=BIGINT},
      score = #{score,jdbcType=INTEGER},
      good_evaluate = #{goodEvaluate,jdbcType=BIGINT},
      normal_evaluate = #{normalEvaluate,jdbcType=BIGINT},
      bad_evaluate = #{badEvaluate,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      is_anonymous = #{isAnonymous,jdbcType=INTEGER},
      image_url = #{imageUrl,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>